// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quotation.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Quotation.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - QuotationRoot

@implementation QuotationRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - QuotationRoot_FileDescriptor

static GPBFileDescriptor *QuotationRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"com.mitrade.pbs"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - QuotationProto

@implementation QuotationProto

@dynamic symbol;
@dynamic type;
@dynamic buyPrice;
@dynamic sellPrice;
@dynamic dailyHigh;
@dynamic dailyLow;
@dynamic lastClose;
@dynamic updateTime;

typedef struct QuotationProto__storage_ {
  uint32_t _has_storage_[1];
  NSString *symbol;
  NSString *type;
  NSString *buyPrice;
  NSString *sellPrice;
  NSString *dailyHigh;
  NSString *dailyLow;
  NSString *lastClose;
  uint64_t updateTime;
} QuotationProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "symbol",
        .dataTypeSpecific.className = NULL,
        .number = QuotationProto_FieldNumber_Symbol,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QuotationProto__storage_, symbol),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = QuotationProto_FieldNumber_Type,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QuotationProto__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "buyPrice",
        .dataTypeSpecific.className = NULL,
        .number = QuotationProto_FieldNumber_BuyPrice,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(QuotationProto__storage_, buyPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sellPrice",
        .dataTypeSpecific.className = NULL,
        .number = QuotationProto_FieldNumber_SellPrice,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(QuotationProto__storage_, sellPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "dailyHigh",
        .dataTypeSpecific.className = NULL,
        .number = QuotationProto_FieldNumber_DailyHigh,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(QuotationProto__storage_, dailyHigh),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "dailyLow",
        .dataTypeSpecific.className = NULL,
        .number = QuotationProto_FieldNumber_DailyLow,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(QuotationProto__storage_, dailyLow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lastClose",
        .dataTypeSpecific.className = NULL,
        .number = QuotationProto_FieldNumber_LastClose,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(QuotationProto__storage_, lastClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "updateTime",
        .dataTypeSpecific.className = NULL,
        .number = QuotationProto_FieldNumber_UpdateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(QuotationProto__storage_, updateTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[QuotationProto class]
                                     rootClass:[QuotationRoot class]
                                          file:QuotationRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QuotationProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\003\010\000\004\t\000\005\t\000\006\010\000\007\t\000\010\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
