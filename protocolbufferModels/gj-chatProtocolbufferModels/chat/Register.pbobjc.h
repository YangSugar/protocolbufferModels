// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: register.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - RegisterRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface RegisterRoot : GPBRootObject
@end

#pragma mark - RegisterRequest

typedef GPB_ENUM(RegisterRequest_FieldNumber) {
  RegisterRequest_FieldNumber_System = 1,
  RegisterRequest_FieldNumber_DeviceToken = 2,
  RegisterRequest_FieldNumber_AppIdentifier = 3,
  RegisterRequest_FieldNumber_DeviceId = 4,
  RegisterRequest_FieldNumber_Manufacturer = 5,
  RegisterRequest_FieldNumber_SessionId = 6,
  RegisterRequest_FieldNumber_CustomerId = 7,
};

@interface RegisterRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *system;
/** Test to see if @c system has been set. */
@property(nonatomic, readwrite) BOOL hasSystem;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceToken;
/** Test to see if @c deviceToken has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appIdentifier;
/** Test to see if @c appIdentifier has been set. */
@property(nonatomic, readwrite) BOOL hasAppIdentifier;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;
/** Test to see if @c deviceId has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *manufacturer;
/** Test to see if @c manufacturer has been set. */
@property(nonatomic, readwrite) BOOL hasManufacturer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;
/** Test to see if @c customerId has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerId;

@end

#pragma mark - RegisterResponse

typedef GPB_ENUM(RegisterResponse_FieldNumber) {
  RegisterResponse_FieldNumber_Success = 1,
  RegisterResponse_FieldNumber_ErrCode = 2,
  RegisterResponse_FieldNumber_Message = 3,
  RegisterResponse_FieldNumber_Value = 4,
  RegisterResponse_FieldNumber_SessionId = 5,
};

@interface RegisterResponse : GPBMessage

@property(nonatomic, readwrite) int32_t success;

@property(nonatomic, readwrite) BOOL hasSuccess;
@property(nonatomic, readwrite) int32_t errCode;

@property(nonatomic, readwrite) BOOL hasErrCode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
